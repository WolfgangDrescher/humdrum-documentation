#!/usr/bin/perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Sat Apr 11 20:16:21 PDT 2020
# Last Modified: Sat Apr 11 20:16:24 PDT 2020
# Filename:      miscCleanup
# Syntax:        perl 5
#
# Description:   Convert:
#                   \--             -->    &mdash;
#                   \...            -->    &hellip;
#                   [a-z]\'[a-z]    -->    [a-z]'[a-z]
#                   ^(> +)+         -->    nothing
#

use strict;

my @files = @ARGV;
foreach my $file (@files) {
	processFile($file);
}

exit(0);



##############################
##
## processFile --
##

sub processFile {
	my ($file) = @_;
	open (FILE, $file) or die "Cannot read $file\n";
	my @contents = <FILE>;
	chomp @contents;
	close FILE;
	my $changed = 0;
	my $newline;
	for (my $i=0; $i<@contents; $i++) {
		$newline = processLine($contents[$i]);
		if ($newline ne $contents[$i]) {
			$contents[$i] = $newline;
			$changed = 1;
		}
	}
	return if !$changed;
	print STDERR "Updating file $file\n";
	open (FILE, ">$file") or die "Cannot write $file\n";
	for (my $i=0; $i<@contents; $i++) {
		print FILE "$contents[$i]\n";
	}
	close FILE;
}



##############################
##
## processLine --
##

sub processLine {
	my ($line) = @_;

	##      Chapter\s\d     -->    Chapter&nbsp;\d
	if (($line !~ /##/) && ($line !~ /<h\d>/i)) {
		$line =~ s/Chapter\s+(\d)/Chapter\&nbsp;$1/g;
	}

	##      Example\s\d     -->    Example&nbsp;\d
	if ($line !~ /^\s*\*\*\s*Example/) {
		$line =~ s/Example\s+(\d)/Example\&nbsp;$1/g;
	}

	##      \--             -->    &mdash;
	#$line =~ s/\\--/\&mdash;/g;

	##      \...            -->    &hellip;
	#$line =~ s/\\\.\.\./\&hellip;/g;

	##      [a-z]\'[a-z]    -->    [a-z]'[a-z]
	#$line =~ s/([a-z])\\'([a-z])/$1'$2/g;

	##      <\/span         -->    <\/span>
	#$line =~ s/<\/span([^>\s])/<\/span> $1/g;
	#$line =~ s/<\/span\s([^>])/<\/span> $1/g;

	##      -\>             -->    &rarr;
	# $line =~ s/-\\>/\&rarr;/g;

	##      ^(> +)+         -->    nothing
	# The following will also destroy content, so
	# should not used on previously edited files:
	# $line =~ s/^(>\s*)+//;

	return $line;
}



